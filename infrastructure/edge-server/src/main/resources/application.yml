
server:
  port: 8888

info:
  component: Edge server (based on Netflix Zuul)

ribbon:
  eureka:
    enabled: true
    ReadTimeout: 20000
    ConnectTimeout: 20000


hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000


spring:
  application:
    name: edge-server
  cloud:
     config:
       failFast: true
       discovery:
         enabled: true


zuul:
  routes:
    sample-microservice:
      path: /smicro/**
      serviceId: sample-microservice





eureka:
  client:
    registerWithEureka: false
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

sample-microservice:
  ribbon:
    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
#    listOfServers: server1:80
#    NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RoundRobinRule
#   eureka:
#      enabled:=alse



logging:
     level:
       org.springframework.security: INFO
       org.springframework.web: INFO
       org.springframework.boot: INFO
       org.springframework.cloud.security.oauth2: INFO
       com.netflix.discovery: 'DEBUG'
       ROOT: INFO



#eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/

---
# For deployment in Docker containers
spring:
  profiles: docker
  cloud:
    config:
      discovery:
        enabled: false
      uri: https://${MY_CONFIG_USER}:${MY_CONFIG_PWD}@config:8888

#eureka.client.serviceUrl.defaultZone: http://discovery:8761/eureka/
